{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ken\\\\Documents\\\\CODE PROJECTS\\\\lint\\\\frontend\\\\src\\\\components\\\\PlaidLinkButton.js\",\n  _s = $RefreshSig$();\n// PlaidLinkButton.js\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlaidLinkButton = ({\n  onTransactionsFetched\n}) => {\n  _s();\n  const [linkToken, setLinkToken] = useState(\"\");\n  const createLinkToken = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:8000/api/create_link_token\");\n      setLinkToken(response.data.link_token);\n    } catch (error) {\n      console.error(\"Error creating link token:\", error);\n    }\n  };\n  const handlePlaidSuccess = async publicToken => {\n    try {\n      const response = await axios.post(\"http://localhost:8000/api/set_access_token\", {\n        public_token: publicToken\n      });\n      const accessToken = response.data.access_token;\n      // Fetch transactions using the access token\n      const transactionsResponse = await axios.get(\"http://localhost:8000/api/transactions\", {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      onTransactionsFetched(transactionsResponse.data.latest_transactions);\n    } catch (error) {\n      console.error(\"Error exchanging public token:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createLinkToken,\n      children: \"Create Link Token\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), linkToken && /*#__PURE__*/_jsxDEV(PlaidLink, {\n      onSuccess: handlePlaidSuccess,\n      linkToken: linkToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(PlaidLinkButton, \"/ipRlDPcohZFgnnwb2uOMnjEbwE=\");\n_c = PlaidLinkButton;\nexport default PlaidLinkButton;\nvar _c;\n$RefreshReg$(_c, \"PlaidLinkButton\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","PlaidLinkButton","onTransactionsFetched","_s","linkToken","setLinkToken","createLinkToken","response","post","data","link_token","error","console","handlePlaidSuccess","publicToken","public_token","accessToken","access_token","transactionsResponse","get","headers","Authorization","latest_transactions","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","PlaidLink","onSuccess","_c","$RefreshReg$"],"sources":["C:/Users/Ken/Documents/CODE PROJECTS/lint/frontend/src/components/PlaidLinkButton.js"],"sourcesContent":["// PlaidLinkButton.js\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst PlaidLinkButton = ({ onTransactionsFetched }) => {\r\n  const [linkToken, setLinkToken] = useState(\"\");\r\n\r\n  const createLinkToken = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:8000/api/create_link_token\"\r\n      );\r\n      setLinkToken(response.data.link_token);\r\n    } catch (error) {\r\n      console.error(\"Error creating link token:\", error);\r\n    }\r\n  };\r\n\r\n  const handlePlaidSuccess = async (publicToken) => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:8000/api/set_access_token\",\r\n        {\r\n          public_token: publicToken,\r\n        }\r\n      );\r\n      const accessToken = response.data.access_token;\r\n      // Fetch transactions using the access token\r\n      const transactionsResponse = await axios.get(\r\n        \"http://localhost:8000/api/transactions\",\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken}`,\r\n          },\r\n        }\r\n      );\r\n      onTransactionsFetched(transactionsResponse.data.latest_transactions);\r\n    } catch (error) {\r\n      console.error(\"Error exchanging public token:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={createLinkToken}>Create Link Token</button>\r\n      {linkToken && (\r\n        <PlaidLink onSuccess={handlePlaidSuccess} linkToken={linkToken} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlaidLinkButton;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAsB,CAAC,KAAK;EAAAC,EAAA;EACrD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMS,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAC/B,6CACF,CAAC;MACDH,YAAY,CAACE,QAAQ,CAACE,IAAI,CAACC,UAAU,CAAC;IACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAED,MAAME,kBAAkB,GAAG,MAAOC,WAAW,IAAK;IAChD,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAC/B,4CAA4C,EAC5C;QACEO,YAAY,EAAED;MAChB,CACF,CAAC;MACD,MAAME,WAAW,GAAGT,QAAQ,CAACE,IAAI,CAACQ,YAAY;MAC9C;MACA,MAAMC,oBAAoB,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAC1C,wCAAwC,EACxC;QACEC,OAAO,EAAE;UACPC,aAAa,EAAG,UAASL,WAAY;QACvC;MACF,CACF,CAAC;MACDd,qBAAqB,CAACgB,oBAAoB,CAACT,IAAI,CAACa,mBAAmB,CAAC;IACtE,CAAC,CAAC,OAAOX,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC;EAED,oBACEX,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAQwB,OAAO,EAAElB,eAAgB;MAAAiB,QAAA,EAAC;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC3DxB,SAAS,iBACRJ,OAAA,CAAC6B,SAAS;MAACC,SAAS,EAAEjB,kBAAmB;MAACT,SAAS,EAAEA;IAAU;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAClE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACzB,EAAA,CA9CIF,eAAe;AAAA8B,EAAA,GAAf9B,eAAe;AAgDrB,eAAeA,eAAe;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}